name: CI-Pipeline

on:
  workflow_dispatch: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    strategy:
      fail-fast: false
      matrix: 
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        framework:
          - net6.0
          - net5.0
          - netcoreapp3.1
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Restore packages
        run: dotnet restore --locked-mode
        working-directory: AspSecurityHeaders.Test
      - name: Build
        run: dotnet build --no-restore --framework ${{ matrix.framework }}
        working-directory: AspSecurityHeaders.Test
      - name: Run tests
        run: dotnet test --no-restore --no-build --framework ${{ matrix.framework }}
        working-directory: AspSecurityHeaders.Test
        
  build:
    name: Build NuGet package
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Restore packages
        run: dotnet restore --locked-mode
        working-directory: AspSecurityHeaders
      - name: Build
        run: dotnet build --no-restore --configuration Release
        working-directory: AspSecurityHeaders
      - name: Create NuGet package
        run: dotnet pack --no-restore --no-build --configuration Release
        working-directory: AspSecurityHeaders
      - name: Upload NuGet package as artifact
        uses: actions/upload-artifact@v2
        with:
          name: AspSecurityHeaders.nupkg
          path: AspSecurityHeaders/bin/Release/*.nupkg
          if-no-files-found: error
          
  release:
    name: Create release if required
    runs-on: ubuntu-latest
    needs: 
      - test
      - build
    steps:
      - name: Install xmlstarlet
        run: sudo apt-get install xmlstarlet
      - name: Checkout Code
        uses: actions/checkout@v2
      - id: version        
        name: Check if a release should be created
        run: |
          set -e
          package_version=$(xmlstarlet sel -t -v "//PackageVersion" AspSecurityHeaders/AspSecurityHeaders.csproj)
          tag_exists=$(git tag -l "v$package_version")
          if [[ -z "$tag_exists" ]]; then
            echo Release does not exist yet - creating release
            echo "::set-output name=update::true"
            echo "::set-output name=version::$package_version"
          else
            echo Release already exists - skipping creation
            echo "::set-output name=update::false"
          fi
      - id: release_content
        name: Generate release content
        if: steps.version.outputs.update == 'true'
        run: |
          set -e
          version_changelog_file=$(mktemp)
          echo "## Changelog" > $version_changelog_file
          cat CHANGELOG.md | sed '/^## \[${{ steps.version.outputs.version }}\].*$/,/^## \[/!d;//d' >> $version_changelog_file
          echo "::set-output name=body_path::$version_changelog_file"
        working-directory: ${{ inputs.workingDirectory }}
      - name: Create Release
        if: steps.version.outputs.update == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: AspSecurityHeaders Version ${{ steps.version.outputs.version }}
          body_path: ${{ steps.release_content.outputs.body_path }}